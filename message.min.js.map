{"version":3,"file":"message.min.js","sources":["utils/types/isString.js","utils/lang/toString.js","utils/types/isFunction.js","utils/types/isObject.js","utils/lang/hasOwn.js","utils/lang/later.js","utils/types/isArray.js","utils/types/isElement.js","utils/types/isDOM.js","utils/types/isHTMLCollection.js","utils/types/isFragment.js","utils/types/isTextNode.js","utils/dom/createElement.js","utils/dom/setAttribute.js","utils/dom/addClass.js","utils/dom/hasClass.js","utils/types/isSVG.js","utils/icons/icon.js","utils/icons/createElement.js","utils/icons/symbols.js","utils/icons/defaults.js","utils/icons/getSymbols.js","utils/icons/getSymbol.js","utils/dom/matches.js","utils/dom/getParentOrHost.js","utils/event/enum.js","utils/event/_off.js","utils/event/_delete.js","utils/event/purgeElement.js","utils/event/getListeners.js","utils/event/off.js","utils/event/on.js","utils/event/getTarget.js","utils/dom/resolveTextNode.js","utils/dom/closest.js","message.js","utils/icons/paint.js","utils/icons/add.js","utils/lang/extend.js","utils/lang/encodeHTML.js","utils/lang/stripScripts.js"],"sourcesContent":["/**\n * 检测数据是否为 String 类型\n * ========================================================================\n * @method isArray\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return typeof str === 'string'\n}\n\nexport default isString\n","/**\n * Object 对象原型上的 toString 方法\n * ========================================================================\n * @method toString\n * @param {*} val\n * @returns {string}\n */\nconst toString = (val) => {\n  return Object.prototype.toString.apply(val)\n}\n\nexport default toString\n","import toString from '../lang/toString'\n\n/**\n * 检测测试数据是否为 Function 类型\n * ========================================================================\n * @method isFunction\n * @param {*} val - （必须）待检测的数据\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\n */\nconst isFunction = (val) => {\n  return typeof val === 'function' || toString(val) === '[object Function]'\n}\n\nexport default isFunction\n","import toString from '../lang/toString'\nimport isFunction from './isFunction'\n\n/**\n * 检测数据是否为 Object 类型\n * ========================================================================\n * @method isObject\n * @param {*} o\n * @returns {boolean}\n */\nconst isObject = (o) => {\n  return (\n    (toString(o) === '[object Object]' ||\n      typeof o === 'object' ||\n      isFunction(o)) &&\n    o !== null\n  )\n}\n\nexport default isObject\n","/**\n * 检测对象自身属性中是否具有指定的属性。\n * ========================================================================\n * @method hasOwn\n * @param {Object} obj - （必须）检测的目标对象\n * @param {String} prop - （必须）属性名\n * @returns {Boolean}\n */\nconst hasOwn = (obj, prop) => {\n  const hasOwnProperty = Object.prototype.hasOwnProperty\n  return obj && hasOwnProperty.call(obj, prop)\n}\n\nexport default hasOwn\n","import isFunction from '../types/isFunction'\n\n/**\n * later - 延迟执行方法\n * ========================================================================\n * @method later\n * @param {Function} fn\n * @param {Number} [delay]\n * @returns {number|boolean}\n */\nconst later = (fn, delay = 300) => {\n  if (!isFunction(fn)) {\n    return false\n  }\n\n  return setTimeout(() => {\n    fn()\n  }, delay)\n}\n\nexport default later\n","import toString from '../lang/toString'\n\n/**\n * 检测数据是否为 Array 类型\n * ========================================================================\n * @method isArray\n * @param {*} o\n * @returns {boolean}\n */\nconst isArray = (o) => {\n  if (Array.isArray) {\n    return Array.isArray(o)\n  } else {\n    return toString(o) === '[object Array]'\n  }\n}\n\nexport default isArray\n","import isObject from './isObject'\n\n/**\n * 检测数据是否为 HTMLElement DOM 节点\n * ========================================================================\n * @method isElement\n * @param {*} o\n * @returns {boolean}\n */\nconst isElement = (o) => {\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\n}\n\nexport default isElement\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\nimport isObject from './isObject'\n\nconst isFragment = (fragment) => {\n  return !!(\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\n  )\n}\n\nexport default isFragment\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import hasOwn from '../lang/hasOwn'\nimport isObject from '../types/isObject'\nimport isString from '../types/isString'\nimport isArray from '../types/isArray'\nimport isDOM from '../types/isDOM'\nimport setAttribute from './setAttribute'\n\n/**\n * 创建 DOM 节点，并添加属性和子节点\n * ========================================================================\n * @method createElement\n * @param {String} tagName - 标签名称\n * @param {Object|Array} attrs - 属性对象或者子节点\n * @param {Array} [children] - 子节点数组\n * @returns {HTMLElement}\n */\nconst createElement = (tagName, attrs, children) => {\n  const $fragment = document.createDocumentFragment()\n  const $el = document.createElement(tagName)\n  const isValidChild = (child) => {\n    return isDOM(child) || isString(child)\n  }\n  const append = (child) => {\n    let $child\n\n    if (!isValidChild(child)) {\n      return false\n    }\n\n    if (isDOM(child)) {\n      $child = child\n    } else if (isString(child)) {\n      $child = document.createTextNode(child)\n    }\n\n    $fragment.appendChild($child)\n  }\n\n  if (isObject(attrs)) {\n    Object.keys(attrs).forEach((attr) => {\n      if (hasOwn(attrs, attr)) {\n        setAttribute($el, attr, attrs[attr])\n      }\n    })\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\n    attrs.forEach((child) => {\n      append(child)\n    })\n  }\n\n  if (isArray(children)) {\n    children.forEach((child) => {\n      append(child)\n    })\n  } else {\n    append(children)\n  }\n\n  $el.appendChild($fragment)\n\n  return $el\n}\n\nexport default createElement\n","/**\n * 给 DOM 节点设置属性/值\n * ========================================================================\n * @method setAttribute\n * @param {HTMLElement} el - DOM 节点\n * @param {String} attr - 属性名称\n * @param {String|Number|Boolean} value - 属性值\n */\nconst setAttribute = (el, attr, value) => {\n  let tagName = el.tagName.toLowerCase()\n\n  switch (attr) {\n    case 'style':\n      el.style.cssText = value\n      break\n    case 'value':\n      if (tagName === 'input' || tagName === 'textarea') {\n        el.value = value\n      } else {\n        el.setAttribute(attr, value)\n      }\n      break\n    case 'className':\n      el.className = value\n      break\n    default:\n      el.setAttribute(attr, value)\n      break\n  }\n}\n\nexport default setAttribute\n","import hasClass from './hasClass'\n\n/**\n * 给 DOM 节点添加名为 className 的样式\n * ========================================================================\n * @method addClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst addClass = (el, className) => {\n  let classList\n  let allClass\n\n  if (hasClass(el, className)) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.add) {\n    classList.add(className)\n  } else {\n    allClass = el.className\n    allClass += allClass.length > 0 ? ' ' + className : className\n    el.className = allClass\n  }\n}\n\nexport default addClass\n","import isElement from '../types/isElement'\n/**\n * 检测 DOM 节点是否包含名为 className 的样式\n * ========================================================================\n * @method hasClass\n * @param {HTMLElement} el - DOM 节点\n * @param {String} className - 样式名称\n * @returns {Boolean}\n */\nconst hasClass = (el, className) => {\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\n  let allClass\n  let classList\n\n  if (!isElement(el)) {\n    return false\n  }\n\n  allClass = el.className\n\n  if (!allClass) {\n    return false\n  }\n\n  classList = el.classList\n\n  if (classList?.contains) {\n    return el.classList.contains(className)\n  }\n\n  return !!pattern.exec(allClass)\n}\n\nexport default hasClass\n","import isString from './isString'\n\nconst isSVG = (str) => {\n  const declaration = '(?:<\\\\?xml[^>]*>\\\\s*)?'\n  const doctype =\n    '(?:<\\\\!doctype svg[^>]*\\\\s*(?:\\\\[?(?:\\\\s*<![^>]*>\\\\s*)*\\\\]?)*[^>]*>\\\\s*)?'\n  const content = '<svg[^>]*>[^]*<\\\\/svg>\\\\s*$'\n  const svg = `^\\\\s*${declaration}${doctype}${content}\\\\s*$`\n  const pattern = new RegExp(svg, 'i')\n\n  return isString(str) && pattern.test(str)\n}\n\nexport default isSVG\n","import createElement from './createElement'\n\n/**\n * 创建 SVG 图标 DOM 元素\n * ========================================================================\n * @method icon\n * @alias createElement\n * @see createElement\n * @param {String} name\n * @param {Object} [options]\n * @param {Number|Array} [options.size]\n * @param {String} [options.color]\n * @param {String} [options.iconSet]\n * @returns {HTMLElement}\n */\nconst icon = (name, options = {}) => {\n  return createElement(name, options)\n}\n\nexport default icon\n","import isArray from '../types/isArray'\nimport isString from '../types/isString'\nimport isSVG from '../types/isSVG'\n\n/**\n * 创建 SVG 图标 DOM 元素\n * ========================================================================\n * @method createElement\n * @param {String} name\n * @param {Object} [options]\n * @param {Number|Array} [options.size]\n * @param {String} [options.color]\n * @param {String} [options.iconSet]\n * @returns {HTMLElement}\n */\nconst createElement = (name, options = {}) => {\n  const size = options.size || 0\n  const color = options.color || ''\n  const iconSet = options.iconSet || 'mjs'\n  const width = isArray(size) ? size[0] : size\n  const height = isArray(size) ? size[1] : size\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\n  const $icon = document.createElement('i')\n  let binds = ''\n  let svg = ''\n  let $svg\n\n  if (!isString(name)) {\n    return null\n  }\n\n  if (isSVG(name)) {\n    svg = name\n  } else {\n    binds =\n      iconSet && iconSet !== 'icon'\n        ? `xlink:href=\"#${iconSet}-icon-${name}\"`\n        : `xlink:href=\"#icon-${name}\"`\n    svg =\n      `<svg aria-hidden=\"true\" class=\"mjs-icon__svg\" style=\"${cssRules}\">` +\n      `<use ${binds}></use>` +\n      `</svg>`\n  }\n\n  $icon.className = 'mjs-icon'\n  $icon.innerHTML = svg\n\n  if (isSVG(name)) {\n    $svg = $icon.querySelector('svg')\n    $svg.setAttribute('aria-hidden', 'true')\n    $svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    $svg.setAttribute('class', 'mjs-icon__svg')\n    $svg.setAttribute('width', '200')\n    $svg.setAttribute('height', '200')\n    $svg.style.cssText = cssRules\n  }\n\n  return $icon\n}\n\nexport default createElement\n","import DEFAULTS from './defaults'\n\nconst SYMBOLS = [...DEFAULTS]\n\nexport default SYMBOLS\n","const DEFAULTS = [\n  '<symbol id=\"mjs-icon-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 384.295982a95.994 95.994 0 0 1 95.994 95.994V928.006a95.994 95.994 0 0 1-191.988 0V480.289982a95.994 95.994 0 0 1 95.994-95.994z m0-128.375977A127.992 127.992 0 1 1 512 0.063996a127.992 127.992 0 0 1 0 255.984001z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 639.704018a95.994 95.994 0 0 1-95.994-95.994V95.994a95.994 95.994 0 0 1 191.988 0v447.716018a95.994 95.994 0 0 1-95.994 95.994z m0 128.375977A127.992 127.992 0 1 1 512 1023.936004a127.992 127.992 0 0 1 0-255.984001z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512.64 376.96L263.744 128 128 263.744l248.96 248.96L128 761.472l135.744 135.808 248.96-248.96 248.832 248.96 135.808-135.808-248.96-248.896 248.96-248.896L761.536 128 512.64 376.96z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-success\" viewBox=\"0 0 1024 1024\"><path d=\"M426.368 580.864l-226.56-226.56L64 489.984l362.048 362.112 0.32-0.32 0.32 0.32 588.288-588.352L879.36 128 426.304 580.864z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-circle-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 810.666667s-42.666667 4.266667-42.666667-42.666667v-341.333333c0-46.933333 42.666667-42.666667 42.666667-42.666667s42.666667-4.266667 42.666667 42.666667v341.333333c0 46.933333-42.666667 42.666667-42.666667 42.666667z m0 213.333333C228.949333 1024 0 795.050667 0 512S228.949333 0 512 0s512 228.949333 512 512-229.674667 512-512 512z m0-938.666667C276.608 85.333333 85.333333 276.608 85.333333 512s191.274667 426.666667 426.666667 426.666667 426.666667-191.274667 426.666667-426.666667S747.392 85.333333 512 85.333333z m0 213.333334c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666667 42.666667 19.2 42.666667 42.666667-19.2 42.666667-42.666667 42.666667z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-circle-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 213.333333s-42.666667-4.266667-42.666667 42.666667v341.333333c0 46.933333 42.666667 42.666667 42.666667 42.666667s42.666667 4.266667 42.666667-42.666667V256c0-46.933333-42.666667-42.666667-42.666667-42.666667z m0-213.333333C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 938.666667C276.608 938.666667 85.333333 747.392 85.333333 512S276.608 85.333333 512 85.333333s426.666667 191.274667 426.666667 426.666667-191.274667 426.666667-426.666667 426.666667z m0-213.333334c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666667 42.666667-19.2 42.666667-42.666667-19.2-42.666667-42.666667-42.666667z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-circle-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0a512 512 0 1 0 512 512 512 512 0 0 0-512-512z m0 955.776A443.84 443.84 0 0 1 512 68.224a443.904 443.904 0 0 1 0 887.552z\"></path><path d=\"M641.664 326.144a32 32 0 0 1 50.304 39.168l-3.52 4.48-306.112 328.064a32 32 0 0 1-50.304-39.168l3.52-4.48 306.112-328.064z\"></path><path d=\"M324.608 337.088a32 32 0 0 1 40.704-5.12l4.48 3.584 328.064 306.112a32 32 0 0 1-39.168 50.304l-4.48-3.52-328.064-306.112a32 32 0 0 1-1.536-45.248z\"></path></symbol>',\n  '<symbol id=\"mjs-icon-circle-success\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 950.869333C269.909333 950.869333 73.130667 754.090667 73.130667 512 73.130667 269.909333 269.909333 73.130667 512 73.130667c242.090667 0 438.869333 196.778667 438.869333 438.869333 0 242.090667-196.778667 438.869333-438.869333 438.869333z\"></path><path d=\"M737.834667 353.834667a42.666667 42.666667 0 0 1 63.872 56.32l-3.541334 4.010666L486.997333 725.333333a85.333333 85.333333 0 0 1-115.242666 4.992L366.336 725.333333l-140.501333-140.501333a42.666667 42.666667 0 0 1 56.32-63.872l4.010666 3.541333L426.666667 665.002667l311.168-311.168z\"></path></symbol>'\n]\n\nexport default DEFAULTS\n","import isString from '../types/isString'\nimport getSymbol from './getSymbol'\nimport SYMBOLS from './symbols'\n\n/**\n *\n * @method getSymbols\n * @param {String} [name]\n * @param {String} [iconSet]\n * @returns {string[]|*}\n */\nconst getSymbols = (name, iconSet = 'mjs') => {\n  if (isString(name)) {\n    return getSymbol(name, iconSet)\n  }\n\n  return [...SYMBOLS]\n}\n\nexport default getSymbols\n","import SYMBOLS from './symbols'\n\n/**\n * @method getSymbol\n * @param {String} name\n * @param {String} [iconSet]\n * @returns {String}\n */\nconst getSymbol = (name, iconSet = 'mjs') => {\n  const patternName = /id=\"(.*?)\"/\n  const patternSet = /^(\\w+)-/\n  const symbols = SYMBOLS\n\n  return symbols.find((symbol) => {\n    const names = patternName.exec(symbol)\n    const fullName = names[1]\n    const sets = patternSet.exec(fullName)\n    const setName = sets[1]\n    const iconName =\n      iconSet === 'icon' ? `${iconSet}-${name}` : `${iconSet}-icon-${name}`\n\n    return setName === iconSet && fullName === iconName\n  })\n}\n\nexport default getSymbol\n","/**\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\n * ========================================================================\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\n * 标 DOM 元素是否为事件代理所期望触发的目标。\n * ========================================================================\n * @method matches\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\n * @returns {Boolean}\n */\nconst matches = (el, selector = '') => {\n  const sel = selector.replace(/^>/i, '')\n\n  if (!selector || !sel || !el) {\n    return false\n  }\n\n  /* istanbul ignore else */\n  if (el.matches) {\n    return el.matches(sel)\n  } else if (el.msMatchesSelector) {\n    return el.msMatchesSelector(sel)\n  } else {\n    return false\n  }\n}\n\nexport default matches\n","/**\n * 获取 DOM 元素的父节点\n * ========================================================================\n * @method getParentOrHost\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\n * @returns {*|HTMLElement}\n */\nconst getParentOrHost = (el) => {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode\n}\n\nexport default getParentOrHost\n","export const CAPTURE_EVENTS = [\n  'focusout',\n  'blur',\n  'focusin',\n  'focus',\n  'load',\n  'unload',\n  'mouseenter',\n  'mouseleave'\n]\n","import { CAPTURE_EVENTS } from './enum'\nimport _delete from './_delete'\n\n/**\n * （私有方法）取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method _off\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} fn - （必须）事件处理器回调函数\n * @private\n */\nconst _off = (el, type, fn) => {\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  /* istanbul ignore else */\n  if (fn._delegateListener) {\n    fn = fn._delegateListener\n    delete fn._delegateListener\n  }\n\n  // 移除缓存的 _listeners 数据\n  _delete(el, type, fn)\n\n  el.removeEventListener(type, fn, capture)\n}\n\nexport default _off\n","/**\n * 删除 DOM 元素缓存的 _listeners 数据\n * ========================================================================\n * @method _delete\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\n * @param {String} type - 事件类型（名称）\n * @param {Function} [fn] - 事件处理器回调函数\n */\nconst _delete = function (el, type, fn) {\n  const listeners = el._listeners\n  let index = -1\n\n  if (listeners.length < 1) {\n    return false\n  }\n\n  // 移除缓存的 _listeners 数据\n  listeners.forEach((listener, i) => {\n    const handler = listener.fn\n\n    if (type === listener.type) {\n      index = i\n\n      if (handler === fn) {\n        index = i\n      }\n    }\n  })\n\n  /* istanbul ignore else */\n  if (index > -1) {\n    listeners.splice(index, 1)\n  }\n}\n\nexport default _delete\n","import isString from '../types/isString'\nimport isElement from '../types/isElement'\nimport getListeners from './getListeners'\nimport _off from './_off'\n\n/**\n * 销毁（type 类型的）代理事件绑定\n * ========================================================================\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\n * ========================================================================\n * @method purgeElement\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\n * @param {String|Boolean} type - （必须）事件类型\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\n */\nconst purgeElement = function (el, type, recurse = false) {\n  const $element = isString(el) ? document.querySelector(el) : el\n  const $children = $element.childNodes\n  const listeners = getListeners($element, type)\n\n  listeners.forEach((listener) => {\n    _off($element, listener.type, listener.fn)\n  })\n\n  if (\n    (recurse || type === true || arguments.length === 1) &&\n    $element &&\n    $children\n  ) {\n    $children.forEach(($child) => {\n      if (isElement($child)) {\n        purgeElement($child, type, recurse)\n      }\n    })\n  }\n}\n\nexport default purgeElement\n","import isString from '../types/isString'\n\n/**\n * 获取 DOM 元素（type 事件类型）事件绑定信息\n * ========================================================================\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\n * ========================================================================\n * @methods getListeners\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\n * @param {String} [type] - （可选）事件类型\n * @returns {Array} - 已绑定的事件信息\n */\nconst getListeners = (el, type) => {\n  let listeners = el._listeners || []\n\n  if (isString(type) && type) {\n    listeners = listeners.filter((listener) => {\n      return listener.type === type\n    })\n  }\n\n  return listeners\n}\n\nexport default getListeners\n","import purgeElement from './purgeElement'\nimport isFunction from '../types/isFunction'\nimport _off from './_off'\n\n/**\n * 取消 type 类型的代理事件绑定\n * ========================================================================\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\n * ========================================================================\n * @method off\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\n * @param {String} type - （必须）事件类型\n * @param {Function} [fn] - （可选）事件处理器回调函数\n */\nconst off = (el, type, fn) => {\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\n  if (!isFunction(fn)) {\n    return purgeElement(el, type)\n  }\n\n  _off(el, type, fn)\n}\n\nexport default off\n","import closest from '../dom/closest'\nimport off from './off'\nimport getTarget from './getTarget'\n\nimport { CAPTURE_EVENTS } from './enum'\n\n/**\n * 绑定代理事件\n * ========================================================================\n * @method on\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\n * @param {Boolean} once - （可选）是否仅触发一次\n */\nconst on = (el, selector, type, fn, data, context, once = false) => {\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\n\n  const listener = function (evt) {\n    const target = getTarget(evt)\n    // 通过 Element.matches 方法获得点击的目标元素\n    const delegateTarget = closest(target, selector, el)\n    let overrideContext = context || el\n\n    evt.delegateTarget = delegateTarget\n\n    // 当设置为 true 时，则事件处理器回调函数的\n    // this 上下文指向为 data 对象\n    if (context === true) {\n      overrideContext = data\n    }\n\n    /* istanbul ignore else */\n    if (delegateTarget) {\n      // 仅触发一次\n      /* istanbul ignore else */\n      if (once === true) {\n        off(el, type, listener)\n      }\n\n      fn.call(overrideContext, evt, data)\n    }\n  }\n\n  if (!el._listeners) {\n    el._listeners = []\n  }\n\n  // 缓存 options 元素绑定的事件处理器\n  el._listeners.push({\n    el,\n    selector,\n    type,\n    fn: listener,\n    data,\n    context,\n    capture\n  })\n\n  // 缓存包装后的事件处理器\n  fn._delegateListener = listener\n\n  el.addEventListener(type, listener, capture)\n}\n\nexport default on\n","import resolveTextNode from '../dom/resolveTextNode'\n\n/**\n * 返回触发事件的 target DOM 元素\n * ========================================================================\n * @method getTarget\n * @param {Event} evt - Event 对象\n * @return {HTMLElement} - Event 对象的 target DOM 元素\n */\nconst getTarget = function (evt) {\n  const target = evt.target\n\n  return resolveTextNode(target)\n}\n\nexport default getTarget\n","/**\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\n * resolveTextNode() 方法则会返回实际的目标节点。\n * ========================================================================\n * @method resolveTextNode\n * @param {HTMLElement|Text} el - 要解析的节点\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\n */\nconst resolveTextNode = function (el) {\n  if (el && el.nodeType === 3) {\n    return el.parentNode\n  }\n\n  return el\n}\n\nexport default resolveTextNode\n","import matches from './matches'\nimport getParentOrHost from './getParentOrHost'\n\n/**\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\n * ========================================================================\n * @method closest\n * @param {HTMLElement} el - （必须）DOM 元素\n * @param {String} selector - （必须）DOM 元素的选择其\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\n */\nconst closest = (el, selector, ctx, includeCTX) => {\n  const context = ctx || document\n\n  if (!el) {\n    return null\n  }\n\n  do {\n    /* istanbul ignore else */\n    if (\n      (selector != null &&\n        (selector.startsWith('>')\n          ? el.parentNode === context && matches(el, selector)\n          : matches(el, selector))) ||\n      (includeCTX && el === context)\n    ) {\n      return el\n    }\n\n    /* istanbul ignore else */\n    if (el === context) {\n      break\n    }\n\n    /* jshint boss:true */\n  } while ((el = getParentOrHost(el)))\n}\n\nexport default closest\n","import isString from './utils/types/isString'\r\nimport isObject from './utils/types/isObject'\r\nimport isFunction from './utils/types/isFunction'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport extend from './utils/lang/extend'\r\nimport later from './utils/lang/later'\r\nimport stripScripts from './utils/lang/stripScripts'\r\nimport encodeHTML from './utils/lang/encodeHTML'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\nimport icon from './utils/icons/icon'\r\nimport paint from './utils/icons/paint'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\n\r\nconst TYPES = ['success', 'warning', 'info', 'error']\r\n\r\nlet instances = []\r\nlet seed = 1\r\nlet instance\r\n\r\npaint()\r\n\r\nclass Message {\r\n  constructor(options) {\r\n    this.attrs = {}\r\n    this.closed = true\r\n    this.$el = null\r\n    this.timer = null\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options)\r\n    this.closed = !this.attr('visible')\r\n    this.render().addListeners()\r\n    return this\r\n  }\r\n\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  render() {\r\n    const type = this.attr('type')\r\n    const message = this.attr('message')\r\n    const effect = this.attr('effect')\r\n    const round = this.attr('round')\r\n    const offset = this.attr('offset')\r\n    const closable = this.attr('closable')\r\n    const visible = this.attr('visible')\r\n    const dangerouslyUseHTMLString = this.attr('dangerouslyUseHTMLString')\r\n    const customClass = this.attr('customClass')\r\n    const iconName = effect === 'light' ? `circle-${type}` : type\r\n    const top = visible ? offset : -50\r\n    const cssRules = `top:${top}px;`\r\n    const className = [\r\n      'mjs-message',\r\n      `mjs-message_${type}`,\r\n      `mjs-message_${effect}`\r\n    ]\r\n    const children = []\r\n    let iconSize = round ? 20 : 16\r\n    let $type\r\n    let $message\r\n    let $text\r\n    let $close\r\n    let $el\r\n\r\n    if (round) {\r\n      className.push('mjs-message_round')\r\n\r\n      if (effect === 'default') {\r\n        iconSize = 12\r\n      }\r\n    }\r\n\r\n    if (!closable) {\r\n      className.push('mjs-message_full-width')\r\n    }\r\n\r\n    if (visible) {\r\n      className.push('mjs-message_visible')\r\n    }\r\n\r\n    if (customClass) {\r\n      className.push(customClass)\r\n    }\r\n\r\n    if (effect !== 'plain') {\r\n      $type = icon(iconName, {\r\n        size: iconSize\r\n      })\r\n      addClass($type, 'mjs-message__icon')\r\n      children.push($type)\r\n    }\r\n\r\n    if (!dangerouslyUseHTMLString) {\r\n      $text = document.createTextNode(encodeHTML(stripScripts(message)))\r\n    } else {\r\n      $text = document.createDocumentFragment()\r\n      $text.innerHTML = message\r\n    }\r\n    $message = createElement(\r\n      'p',\r\n      {\r\n        className: 'mjs-message__content'\r\n      },\r\n      [$text]\r\n    )\r\n    children.push($message)\r\n\r\n    if (closable) {\r\n      $close = icon('close', { size: 18 })\r\n      addClass($type, 'mjs-message__close')\r\n      children.push($close)\r\n    }\r\n\r\n    $el = createElement(\r\n      'div',\r\n      {\r\n        className: className.join(' ')\r\n      },\r\n      children\r\n    )\r\n    $el.style.cssText = cssRules\r\n    this.$el = $el\r\n\r\n    document.body.appendChild(this.$el)\r\n\r\n    return this\r\n  }\r\n\r\n  clearTimer() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n    }\r\n  }\r\n\r\n  startTimer(duration) {\r\n    this.timer = later(() => {\r\n      this.close()\r\n    }, duration * 1000)\r\n  }\r\n\r\n  open() {\r\n    const duration = this.attr('duration')\r\n\r\n    this.clearTimer()\r\n\r\n    later(() => {\r\n      this.visible = true\r\n      this.closed = false\r\n\r\n      if (duration > 0) {\r\n        this.startTimer(duration)\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  close() {\r\n    const beforeClose = this.attr('beforeClose')\r\n\r\n    this.closed = true\r\n\r\n    if (isFunction(beforeClose)) {\r\n      beforeClose(this)\r\n    }\r\n\r\n    this.visible = false\r\n    this.closed = true\r\n\r\n    later(() => {\r\n      this.remove()\r\n    }, 500)\r\n  }\r\n\r\n  remove() {\r\n    this.destroy()\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    document.body.removeChild(this.$el)\r\n\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.clearTimer()\r\n  }\r\n\r\n  onMouseLeave() {\r\n    const duration = this.attr('duration')\r\n    const delay = this.attr('delay')\r\n\r\n    if (duration <= 0) {\r\n      return false\r\n    }\r\n\r\n    this.startTimer(delay)\r\n  }\r\n\r\n  onClose() {\r\n    this.clearTimer()\r\n    this.close()\r\n  }\r\n\r\n  addListeners() {\r\n    const $el = this.$el\r\n\r\n    on(\r\n      $el,\r\n      '.mjs-message__content',\r\n      'mouseenter',\r\n      this.onMouseEnter,\r\n      this,\r\n      true\r\n    )\r\n    on(\r\n      $el,\r\n      '.mjs-message__content',\r\n      'mouseleave',\r\n      this.onMouseLeave,\r\n      this,\r\n      true\r\n    )\r\n    on($el, '.mjs-message__close', 'click', this.onClose, this, true)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $el = this.$el\r\n\r\n    off($el, 'mouseenter', this.onMouseEnter)\r\n    off($el, 'mouseleave', this.onMouseLeave)\r\n    off($el, 'click', this.onClose)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nMessage.DEFAULTS = {\r\n  id: 0,\r\n  type: 'info',\r\n  effect: 'default',\r\n  offset: 30,\r\n  duration: 6,\r\n  delay: 2,\r\n  message: '',\r\n  customClass: '',\r\n  round: false,\r\n  closable: true,\r\n  visible: false,\r\n  dangerouslyUseHTMLString: false,\r\n  beforeClose: null\r\n}\r\n\r\nTYPES.forEach((type) => {\r\n  Message[type] = (options) => {\r\n    const id = `mjs-message-${seed++}`\r\n    const beforeClose = options.beforeClose\r\n    let offset = options.offset || 30\r\n\r\n    options = options || {}\r\n    options.id = id\r\n\r\n    if (isString(options)) {\r\n      options = {\r\n        message: options\r\n      }\r\n    }\r\n\r\n    options.beforeClose = () => {\r\n      Message.close(id, beforeClose)\r\n    }\r\n\r\n    options.type = type\r\n\r\n    instance = new Message(options)\r\n\r\n    instances.forEach((item) => {\r\n      offset += item.$el.offsetHeight + 16\r\n    })\r\n    instance.offset = offset\r\n    instance.open()\r\n    instances.push(instance)\r\n\r\n    return instance\r\n  }\r\n})\r\n\r\n// 关闭指定 id 消息的静态方法\r\nMessage.close = (id, beforeClose) => {\r\n  let len = instances.length\r\n  let index = -1\r\n  let removedHeight\r\n\r\n  instances.forEach((instance, i) => {\r\n    // 在 instances 中通过 id 找到要关闭的消息\r\n    if (id === instance.id) {\r\n      removedHeight = instance.$el.offsetHeight\r\n      index = i\r\n\r\n      // 关闭消息\r\n      if (isFunction(beforeClose)) {\r\n        beforeClose(instance)\r\n      }\r\n\r\n      instances.splice(i, 1)\r\n    }\r\n  })\r\n\r\n  if (len <= 1 || index === -1 || index > instances.length - 1) {\r\n    return false\r\n  }\r\n\r\n  // 界面中的消息逐个向上收起\r\n  for (let i = index; i < len - 1; i++) {\r\n    let dom = instances[i].$el\r\n\r\n    dom.style['top'] =\r\n      parseInt(dom.style['top'], 10) - removedHeight - 16 + 'px'\r\n  }\r\n}\r\n\r\n// 关闭所有消息的静态方法\r\nMessage.closeAll = () => {\r\n  for (let i = instances.length - 1; i >= 0; i--) {\r\n    instances[i].close()\r\n  }\r\n}\r\n\r\nexport default Message\r\n","import add from './add'\nimport getSymbols from './getSymbols'\n\n/**\n * 绘制 SVG 图标集\n * ========================================================================\n * @method paint\n * @param {String|Array} symbol\n */\nconst paint = (symbol = '') => {\n  const $body = document.body\n  let $icons = document.querySelector('#mjs-icons')\n  let symbols = []\n\n  add(symbol)\n  symbols = getSymbols()\n\n  if ($icons) {\n    $icons.innerHTML = symbols.join('')\n  } else {\n    $icons = document.createElement('div')\n    $icons.innerHTML =\n      `<svg id=\"mjs-icons\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\n      `${symbols.join('')}` +\n      `</svg>`\n    $body.insertBefore($icons.firstChild, $body.firstChild)\n  }\n}\n\nexport default paint\n","import isArray from '../types/isArray'\nimport isString from '../types/isString'\nimport SYMBOLS from './symbols'\n\n/**\n * @method add\n * @param {Array|String} symbols\n * @return {Boolean}\n */\nconst add = (symbols) => {\n  if (!symbols) {\n    return false\n  }\n\n  if (isArray(symbols) && symbols.length > 0) {\n    symbols.forEach((symbol) => {\n      /* istanbul ignore else */\n      if (SYMBOLS.indexOf(symbol) === -1 && isString(symbol)) {\n        SYMBOLS.push(symbol)\n      }\n    })\n  } else {\n    /* istanbul ignore else */\n    if (isString(symbols)) {\n      SYMBOLS.push(symbols)\n    }\n  }\n}\n\nexport default add\n","import hasOwn from './hasOwn'\n\n/**\n * 扩展对象\n * ========================================================================\n * @method extend\n * @param {Object} origin\n * @param {Object} source\n */\nconst extend = (origin, source) => {\n  const keys = Object.keys(source)\n\n  keys.forEach((prop) => {\n    if (hasOwn(source, prop)) {\n      origin[prop] = source[prop]\n    }\n  })\n}\n\nexport default extend\n","/**\r\n * 转义字符串中的 HTML 标签\r\n *\r\n * @param {String} str - 需要转义的字符串\r\n * @returns {String}\r\n */\r\nconst encodeHTML = (str) => {\r\n  const CHARTS = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&#39;',\r\n    '\"': '&quot;'\r\n  }\r\n\r\n  return str.replace(/[&<>'\"]/g, (tag) => {\r\n    return CHARTS[tag] || tag\r\n  })\r\n}\r\n\r\nexport default encodeHTML\r\n","/**\r\n * 移除字符串中的 JavaScript 代码\r\n * ====================================================\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nconst stripScripts = (str) => {\r\n  return str.replace(/<script[^>]*>.*?<\\/script>/gi, '')\r\n}\r\n\r\nexport default stripScripts\r\n"],"names":["isString","str","toString","val","Object","prototype","apply","isFunction","isObject","o","hasOwn","obj","prop","hasOwnProperty","call","later","fn","delay","setTimeout","isArray","Array","isElement","nodeName","tagName","nodeType","isDOM","el","isHTMLCollection","fragment","isTextNode","createElement","attrs","children","$fragment","document","createDocumentFragment","$el","isValidChild","child","append","$child","createTextNode","appendChild","keys","forEach","attr","value","toLowerCase","style","cssText","setAttribute","className","every","addClass","classList","allClass","pattern","RegExp","contains","exec","hasClass","add","length","isSVG","test","icon","name","options","size","color","iconSet","width","height","defaultRules","cssRules","$icon","$svg","binds","svg","innerHTML","querySelector","SYMBOLS","getSymbols","patternName","patternSet","find","symbol","fullName","iconName","getSymbol","matches","selector","sel","replace","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","$children","childNodes","filter","getListeners","arguments","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","startsWith","closest","overrideContext","push","addEventListener","instance","instances","seed","$body","body","$icons","symbols","join","insertBefore","firstChild","paint","Message","constructor","this","closed","timer","initialize","render","addListeners","origin","source","isClosed","message","effect","round","offset","closable","visible","dangerouslyUseHTMLString","customClass","$type","$message","$text","$close","iconSize","CHARTS","tag","encodeHTML","clearTimer","clearTimeout","startTimer","duration","close","open","beforeClose","remove","destroy","removeListeners","removeChild","reload","onMouseEnter","onMouseLeave","onClose","DEFAULTS","id","item","offsetHeight","removedHeight","len","dom","parseInt","closeAll"],"mappings":"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"}