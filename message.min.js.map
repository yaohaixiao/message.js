{"version":3,"file":"message.min.js","sources":["utils/types/isString.js","utils/lang/toString.js","utils/types/isFunction.js","utils/types/isObject.js","utils/lang/hasOwn.js","utils/lang/later.js","utils/types/isArray.js","utils/lang/cloneDeep.js","utils/lang/guid.js","utils/types/isElement.js","utils/types/isDOM.js","utils/types/isHTMLCollection.js","utils/types/isFragment.js","utils/types/isTextNode.js","utils/dom/setAttributes.js","utils/dom/setAttribute.js","utils/dom/createElement.js","utils/dom/hasClass.js","utils/dom/addClass.js","utils/dom/removeClass.js","utils/lang/trim.js","utils/types/isSVG.js","utils/icons/icon.js","utils/icons/createElement.js","utils/icons/symbols.js","utils/icons/defaults.js","utils/icons/getSymbols.js","utils/icons/getSymbol.js","utils/dom/matches.js","utils/dom/getParentOrHost.js","utils/event/enum.js","utils/event/_off.js","utils/event/_delete.js","utils/event/purgeElement.js","utils/event/getListeners.js","utils/event/off.js","utils/event/on.js","utils/event/getTarget.js","utils/dom/resolveTextNode.js","utils/dom/closest.js","message.js","utils/icons/paint.js","utils/icons/add.js","utils/lang/extend.js","utils/lang/encodeHTML.js","utils/lang/stripScripts.js"],"sourcesContent":["/**\r\n * 检测数据是否为 String 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} str\r\n * @returns {boolean}\r\n */\r\nconst isString = (str) => {\r\n  return typeof str === 'string'\r\n}\r\n\r\nexport default isString\r\n","/**\r\n * Object 对象原型上的 toString 方法\r\n * ========================================================================\r\n * @method toString\r\n * @param {*} val\r\n * @returns {string}\r\n */\r\nconst toString = (val) => {\r\n  return Object.prototype.toString.apply(val)\r\n}\r\n\r\nexport default toString\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测测试数据是否为 Function 类型\r\n * ========================================================================\r\n * @method isFunction\r\n * @param {*} val - （必须）待检测的数据\r\n * @returns {boolean} 'val' 是 Function 类型返回 true，否则返回 false\r\n */\r\nconst isFunction = (val) => {\r\n  return typeof val === 'function' || toString(val) === '[object Function]'\r\n}\r\n\r\nexport default isFunction\r\n","import toString from '../lang/toString'\r\nimport isFunction from './isFunction'\r\n\r\n/**\r\n * 检测数据是否为 Object 类型\r\n * ========================================================================\r\n * @method isObject\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isObject = (o) => {\r\n  return (\r\n    (toString(o) === '[object Object]' ||\r\n      typeof o === 'object' ||\r\n      isFunction(o)) &&\r\n    o !== null\r\n  )\r\n}\r\n\r\nexport default isObject\r\n","/**\r\n * 检测对象自身属性中是否具有指定的属性。\r\n * ========================================================================\r\n * @method hasOwn\r\n * @param {Object} obj - （必须）检测的目标对象\r\n * @param {String} prop - （必须）属性名\r\n * @returns {Boolean}\r\n */\r\nconst hasOwn = (obj, prop) => {\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty\r\n  return obj && hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nexport default hasOwn\r\n","import isFunction from '../types/isFunction'\r\n\r\n/**\r\n * later - 延迟执行方法\r\n * ========================================================================\r\n * @method later\r\n * @param {Function} fn\r\n * @param {Number} [delay]\r\n * @returns {number|boolean}\r\n */\r\nconst later = (fn, delay = 300) => {\r\n  if (!isFunction(fn)) {\r\n    return false\r\n  }\r\n\r\n  return setTimeout(() => {\r\n    fn()\r\n  }, delay)\r\n}\r\n\r\nexport default later\r\n","import toString from '../lang/toString'\r\n\r\n/**\r\n * 检测数据是否为 Array 类型\r\n * ========================================================================\r\n * @method isArray\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isArray = (o) => {\r\n  if (Array.isArray) {\r\n    return Array.isArray(o)\r\n  } else {\r\n    return toString(o) === '[object Array]'\r\n  }\r\n}\r\n\r\nexport default isArray\r\n","import isArray from '../types/isArray'\r\n\r\n/**\r\n * 深拷贝对象函数\r\n * ========================================================================\r\n * @methods cloneDeep\r\n * @param {Object} obj - 深拷贝的对象\r\n * @returns {Array|Object|*}\r\n *\r\n * @example\r\n * const arr = cloneDeep([2,3,4,6])\r\n * => [2,3,4,6]\r\n */\r\nconst cloneDeep = (obj) => {\r\n  let clone\r\n\r\n  if (obj === null) {\r\n    return null\r\n  }\r\n\r\n  clone = Object.assign({}, obj)\r\n\r\n  Object.keys(clone).forEach((key) => {\r\n    return (clone[key] =\r\n      typeof obj[key] === 'object' ? cloneDeep(obj[key]) : obj[key])\r\n  })\r\n\r\n  if (isArray(obj)) {\r\n    clone.length = obj.length\r\n\r\n    return Array.from(clone)\r\n  }\r\n\r\n  return clone\r\n}\r\n\r\nexport default cloneDeep\r\n","/**\r\n * 生成唯一 id 字符串的函数\r\n * ========================================================================\r\n * @method guid\r\n * @param {String} [prefix] - 生成 id 的前缀字符串\r\n * @return {String} 返回一个表示唯一 id 的字符串\r\n */\r\nconst guid = (() => {\r\n  let id = 0\r\n\r\n  return (prefix = 'guid-') => {\r\n    id += 1\r\n\r\n    return `${prefix + id}`\r\n  }\r\n})()\r\n\r\nexport default guid\r\n","import isObject from './isObject'\r\n\r\n/**\r\n * 检测数据是否为 HTMLElement DOM 节点\r\n * ========================================================================\r\n * @method isElement\r\n * @param {*} o\r\n * @returns {boolean}\r\n */\r\nconst isElement = (o) => {\r\n  return !!(isObject(o) && o.nodeName && o.tagName && o.nodeType === 1)\r\n}\r\n\r\nexport default isElement\r\n","import isObject from './isObject'\r\nimport isElement from './isElement'\r\nimport isHTMLCollection from './isHTMLCollection'\r\nimport isFragment from './isFragment'\r\nimport isTextNode from './isTextNode'\r\n\r\nconst isDOM = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (isElement(el) || isHTMLCollection(el) || isFragment(el) || isTextNode(el))\r\n  )\r\n}\r\n\r\nexport default isDOM\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isHTMLCollection = (el) => {\r\n  return !!(isObject(el) && toString(el) === '[object NodeList]')\r\n}\r\n\r\nexport default isHTMLCollection\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isFragment = (fragment) => {\r\n  return !!(\r\n    isObject(fragment) && toString(fragment) === '[object DocumentFragment]'\r\n  )\r\n}\r\n\r\nexport default isFragment\r\n","import toString from '../lang/toString'\r\nimport isObject from './isObject'\r\n\r\nconst isTextNode = (el) => {\r\n  return !!(\r\n    isObject(el) &&\r\n    (toString(el) === '[object Text]' || (el.tagName && el.nodeType === 3))\r\n  )\r\n}\r\n\r\nexport default isTextNode\r\n","import isObject from '../types/isObject'\nimport hasOwn from '../lang/hasOwn'\nimport setAttribute from './setAttribute'\n\nconst setAttributes = (el, attrs) => {\n  if (!el || !isObject(attrs)) {\n    return false\n  }\n\n  Object.keys(attrs).forEach((attr) => {\n    const value = attrs[attr]\n    if (hasOwn(attrs, attr)) {\n      setAttribute(el, attr, value)\n    }\n  })\n}\n\nexport default setAttributes\n","/**\r\n * 给 DOM 节点设置属性/值\r\n * ========================================================================\r\n * @method setAttribute\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} attr - 属性名称\r\n * @param {String|Number|Boolean} value - 属性值\r\n */\r\nconst setAttribute = (el, attr, value) => {\r\n  let tagName = el.tagName.toLowerCase()\r\n\r\n  switch (attr) {\r\n    case 'style':\r\n      el.style.cssText = value\r\n      break\r\n    case 'value':\r\n      if (tagName === 'input' || tagName === 'textarea') {\r\n        el.value = value\r\n      } else {\r\n        el.setAttribute(attr, value)\r\n      }\r\n      break\r\n    case 'className':\r\n      el.className = value\r\n      break\r\n    default:\r\n      el.setAttribute(attr, value)\r\n      break\r\n  }\r\n}\r\n\r\nexport default setAttribute\r\n","import isObject from '../types/isObject'\r\nimport isString from '../types/isString'\r\nimport isArray from '../types/isArray'\r\nimport isDOM from '../types/isDOM'\r\nimport setAttributes from './setAttributes'\r\n\r\n/**\r\n * 创建 DOM 节点，并添加属性和子节点\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} tagName - 标签名称\r\n * @param {Object|Array} attrs - 属性对象或者子节点\r\n * @param {Array} [children] - 子节点数组\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (tagName, attrs, children) => {\r\n  const $fragment = document.createDocumentFragment()\r\n  const $el = document.createElement(tagName)\r\n  const isValidChild = (child) => {\r\n    return isDOM(child) || isString(child)\r\n  }\r\n  const append = (child) => {\r\n    let $child\r\n\r\n    if (!isValidChild(child)) {\r\n      return false\r\n    }\r\n\r\n    if (isDOM(child)) {\r\n      $child = child\r\n    } else if (isString(child)) {\r\n      $child = document.createTextNode(child)\r\n    }\r\n\r\n    $fragment.appendChild($child)\r\n  }\r\n\r\n  if (isObject(attrs)) {\r\n    setAttributes($el, attrs)\r\n  } else if (isArray(attrs) && attrs.every((attr) => isValidChild(attr))) {\r\n    attrs.forEach((child) => {\r\n      append(child)\r\n    })\r\n  }\r\n\r\n  if (isArray(children)) {\r\n    children.forEach((child) => {\r\n      append(child)\r\n    })\r\n  } else {\r\n    append(children)\r\n  }\r\n\r\n  $el.appendChild($fragment)\r\n\r\n  return $el\r\n}\r\n\r\nexport default createElement\r\n","import isElement from '../types/isElement'\r\n/**\r\n * 检测 DOM 节点是否包含名为 className 的样式\r\n * ========================================================================\r\n * @method hasClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst hasClass = (el, className) => {\r\n  const pattern = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)')\r\n  let allClass\r\n  let classList\r\n\r\n  if (!isElement(el)) {\r\n    return false\r\n  }\r\n\r\n  allClass = el.className\r\n\r\n  if (!allClass) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.contains) {\r\n    return el.classList.contains(className)\r\n  }\r\n\r\n  return !!pattern.exec(allClass)\r\n}\r\n\r\nexport default hasClass\r\n","import hasClass from './hasClass'\r\n\r\n/**\r\n * 给 DOM 节点添加名为 className 的样式\r\n * ========================================================================\r\n * @method addClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst addClass = (el, className) => {\r\n  let classList\r\n  let allClass\r\n\r\n  if (hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.add) {\r\n    classList.add(className)\r\n  } else {\r\n    allClass = el.className\r\n    allClass += allClass.length > 0 ? ' ' + className : className\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default addClass\r\n","import trim from '../lang/trim'\r\nimport hasClass from './hasClass'\r\n\r\n/**\r\n * 移除 DOM 节点的 className 样式\r\n * ========================================================================\r\n * @method removeClass\r\n * @param {HTMLElement} el - DOM 节点\r\n * @param {String} className - 样式名称\r\n * @returns {Boolean}\r\n */\r\nconst removeClass = (el, className) => {\r\n  let allClass = el.className\r\n  let classList\r\n\r\n  if (!allClass || !hasClass(el, className)) {\r\n    return false\r\n  }\r\n\r\n  classList = el.classList\r\n\r\n  if (classList?.remove) {\r\n    classList.remove(className)\r\n  } else {\r\n    allClass = trim(allClass.replace(className, ''))\r\n    el.className = allClass\r\n  }\r\n}\r\n\r\nexport default removeClass\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 清楚字符串起始位置所有的空格\r\n * ========================================================================\r\n * @method trim\r\n * @param {string} str\r\n * @returns {string|Boolean}\r\n */\r\nconst trim = (str) => {\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n  return str.replace(/(^\\s+)|(\\s+$)/g, '')\r\n}\r\n\r\nexport default trim\r\n","import isString from './isString'\r\n\r\nconst isSVG = (str) => {\r\n  const declaration = '(?:<\\\\?xml[^>]*>\\\\s*)?'\r\n  const doctype =\r\n    '(?:<\\\\!doctype svg[^>]*\\\\s*(?:\\\\[?(?:\\\\s*<![^>]*>\\\\s*)*\\\\]?)*[^>]*>\\\\s*)?'\r\n  const content = '<svg[^>]*>[^]*<\\\\/svg>\\\\s*$'\r\n  const svg = `^\\\\s*${declaration}${doctype}${content}\\\\s*$`\r\n  const pattern = new RegExp(svg, 'i')\r\n\r\n  return isString(str) && pattern.test(str)\r\n}\r\n\r\nexport default isSVG\r\n","import createElement from './createElement'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method icon\r\n * @alias createElement\r\n * @see createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @returns {HTMLElement}\r\n */\r\nconst icon = (name, options = {}) => {\r\n  return createElement(name, options)\r\n}\r\n\r\nexport default icon\r\n","import isArray from '../types/isArray'\r\nimport isString from '../types/isString'\r\nimport isSVG from '../types/isSVG'\r\nimport setAttributes from '../dom/setAttributes'\r\n\r\n/**\r\n * 创建 SVG 图标 DOM 元素\r\n * ========================================================================\r\n * @method createElement\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @param {Number|Array} [options.size]\r\n * @param {String} [options.color]\r\n * @param {String} [options.iconSet]\r\n * @param {Object} [options.attrs] - （可选）给创建的 icons 元素设置的 HTML 属性对象\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (name, options = {}) => {\r\n  const size = options.size || 0\r\n  const color = options.color || ''\r\n  const iconSet = options.iconSet || 'mjs'\r\n  const width = isArray(size) ? size[0] : size\r\n  const height = isArray(size) ? size[1] : size\r\n  const defaultRules = size ? `width:${width}px;height:${height}px;` : ''\r\n  const cssRules = color ? defaultRules + `color:${color}` : defaultRules\r\n  const $icon = document.createElement('i')\r\n  const attrs = options.attrs || {}\r\n  let binds = ''\r\n  let svg = ''\r\n  let $svg\r\n\r\n  if (!isString(name)) {\r\n    return null\r\n  }\r\n\r\n  if (isSVG(name)) {\r\n    svg = name\r\n  } else {\r\n    binds =\r\n      iconSet && iconSet !== 'icon'\r\n        ? `xlink:href=\"#${iconSet}-icon-${name}\"`\r\n        : `xlink:href=\"#icon-${name}\"`\r\n    svg =\r\n      `<svg aria-hidden=\"true\" class=\"mjs-icon__svg\" style=\"${cssRules}\">` +\r\n      `<use ${binds}></use>` +\r\n      `</svg>`\r\n  }\r\n\r\n  if (attrs.className) {\r\n    attrs.className = 'mjs-icon ' + attrs.className\r\n  } else {\r\n    attrs.className = 'mjs-icon'\r\n  }\r\n\r\n  setAttributes($icon, attrs)\r\n  $icon.innerHTML = svg\r\n\r\n  if (isSVG(name)) {\r\n    $svg = $icon.querySelector('svg')\r\n    setAttributes($svg, {\r\n      'aria-hidden': true,\r\n      xmlns: 'http://www.w3.org/2000/svg',\r\n      class: 'mjs-icon__svg',\r\n      width: 200,\r\n      height: 200,\r\n      style: cssRules\r\n    })\r\n  }\r\n\r\n  return $icon\r\n}\r\n\r\nexport default createElement\r\n","import DEFAULTS from './defaults'\r\n\r\nconst SYMBOLS = [...DEFAULTS]\r\n\r\nexport default SYMBOLS\r\n","const DEFAULTS = [\r\n  '<symbol id=\"mjs-icon-close\" viewBox=\"0 0 1024 1024\"><path d=\"M536.96 491.648L310.592 265.344a32 32 0 1 0-45.248 45.248L491.584 536.96l-226.304 226.304a32 32 0 0 0 45.312 45.248l226.24-226.304 226.304 226.304a32 32 0 0 0 45.248-45.248L582.144 536.896l226.304-226.24a32 32 0 0 0-45.248-45.248L536.896 491.584z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 384.295982a95.994 95.994 0 0 1 95.994 95.994V928.006a95.994 95.994 0 0 1-191.988 0V480.289982a95.994 95.994 0 0 1 95.994-95.994z m0-128.375977A127.992 127.992 0 1 1 512 0.063996a127.992 127.992 0 0 1 0 255.984001z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 639.704018a95.994 95.994 0 0 1-95.994-95.994V95.994a95.994 95.994 0 0 1 191.988 0v447.716018a95.994 95.994 0 0 1-95.994 95.994z m0 128.375977A127.992 127.992 0 1 1 512 1023.936004a127.992 127.992 0 0 1 0-255.984001z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512.64 376.96L263.744 128 128 263.744l248.96 248.96L128 761.472l135.744 135.808 248.96-248.96 248.832 248.96 135.808-135.808-248.96-248.896 248.96-248.896L761.536 128 512.64 376.96z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-success\" viewBox=\"0 0 1024 1024\"><path d=\"M426.368 580.864l-226.56-226.56L64 489.984l362.048 362.112 0.32-0.32 0.32 0.32 588.288-588.352L879.36 128 426.304 580.864z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-circle-info\" viewBox=\"0 0 1024 1024\"><path d=\"M512 810.666667s-42.666667 4.266667-42.666667-42.666667v-341.333333c0-46.933333 42.666667-42.666667 42.666667-42.666667s42.666667-4.266667 42.666667 42.666667v341.333333c0 46.933333-42.666667 42.666667-42.666667 42.666667z m0 213.333333C228.949333 1024 0 795.050667 0 512S228.949333 0 512 0s512 228.949333 512 512-229.674667 512-512 512z m0-938.666667C276.608 85.333333 85.333333 276.608 85.333333 512s191.274667 426.666667 426.666667 426.666667 426.666667-191.274667 426.666667-426.666667S747.392 85.333333 512 85.333333z m0 213.333334c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666667 42.666667 19.2 42.666667 42.666667-19.2 42.666667-42.666667 42.666667z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-circle-warning\" viewBox=\"0 0 1024 1024\"><path d=\"M512 213.333333s-42.666667-4.266667-42.666667 42.666667v341.333333c0 46.933333 42.666667 42.666667 42.666667 42.666667s42.666667 4.266667 42.666667-42.666667V256c0-46.933333-42.666667-42.666667-42.666667-42.666667z m0-213.333333C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 938.666667C276.608 938.666667 85.333333 747.392 85.333333 512S276.608 85.333333 512 85.333333s426.666667 191.274667 426.666667 426.666667-191.274667 426.666667-426.666667 426.666667z m0-213.333334c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666667 42.666667-19.2 42.666667-42.666667-19.2-42.666667-42.666667-42.666667z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-circle-error\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0a512 512 0 1 0 512 512 512 512 0 0 0-512-512z m0 955.776A443.84 443.84 0 0 1 512 68.224a443.904 443.904 0 0 1 0 887.552z\"></path><path d=\"M641.664 326.144a32 32 0 0 1 50.304 39.168l-3.52 4.48-306.112 328.064a32 32 0 0 1-50.304-39.168l3.52-4.48 306.112-328.064z\"></path><path d=\"M324.608 337.088a32 32 0 0 1 40.704-5.12l4.48 3.584 328.064 306.112a32 32 0 0 1-39.168 50.304l-4.48-3.52-328.064-306.112a32 32 0 0 1-1.536-45.248z\"></path></symbol>',\r\n  '<symbol id=\"mjs-icon-circle-success\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C228.949333 0 0 228.949333 0 512s228.949333 512 512 512 512-228.949333 512-512S794.325333 0 512 0z m0 950.869333C269.909333 950.869333 73.130667 754.090667 73.130667 512 73.130667 269.909333 269.909333 73.130667 512 73.130667c242.090667 0 438.869333 196.778667 438.869333 438.869333 0 242.090667-196.778667 438.869333-438.869333 438.869333z\"></path><path d=\"M737.834667 353.834667a42.666667 42.666667 0 0 1 63.872 56.32l-3.541334 4.010666L486.997333 725.333333a85.333333 85.333333 0 0 1-115.242666 4.992L366.336 725.333333l-140.501333-140.501333a42.666667 42.666667 0 0 1 56.32-63.872l4.010666 3.541333L426.666667 665.002667l311.168-311.168z\"></path></symbol>'\r\n]\r\n\r\nexport default DEFAULTS\r\n","import isString from '../types/isString'\r\nimport getSymbol from './getSymbol'\r\nimport SYMBOLS from './symbols'\r\n\r\n/**\r\n *\r\n * @method getSymbols\r\n * @param {String} [name]\r\n * @param {String} [iconSet]\r\n * @returns {string[]|*}\r\n */\r\nconst getSymbols = (name, iconSet = 'mjs') => {\r\n  if (isString(name)) {\r\n    return getSymbol(name, iconSet)\r\n  }\r\n\r\n  return [...SYMBOLS]\r\n}\r\n\r\nexport default getSymbols\r\n","import SYMBOLS from './symbols'\r\n\r\n/**\r\n * @method getSymbol\r\n * @param {String} name\r\n * @param {String} [iconSet]\r\n * @returns {String}\r\n */\r\nconst getSymbol = (name, iconSet = 'mjs') => {\r\n  const patternName = /id=\"(.*?)\"/\r\n  const patternSet = /^(\\w+)-/\r\n  const symbols = SYMBOLS\r\n\r\n  return symbols.find((symbol) => {\r\n    const names = patternName.exec(symbol)\r\n    const fullName = names[1]\r\n    const sets = patternSet.exec(fullName)\r\n    const setName = sets[1]\r\n    const iconName =\r\n      iconSet === 'icon' ? `${iconSet}-${name}` : `${iconSet}-icon-${name}`\r\n\r\n    return setName === iconSet && fullName === iconName\r\n  })\r\n}\r\n\r\nexport default getSymbol\r\n","/**\r\n * 获取 options 节点下匹配 selector 选择器的 DOM 节点\r\n * ========================================================================\r\n * Element.matches() 方法可以用来判断 DOM 元素是否与给定的选择器匹配，事件代理判断是\r\n * 否触发绑定的代理事件回调函数，关键就是使用 Element.matches() 辨别当前事件触发的目\r\n * 标 DOM 元素是否为事件代理所期望触发的目标。\r\n * ========================================================================\r\n * @method matches\r\n * @see https://developer.mozilla.org/en-US/docs/web/api/element/matches\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）匹配 DOM 元素的选择器\r\n * @returns {Boolean}\r\n */\r\nconst matches = (el, selector = '') => {\r\n  const sel = selector.replace(/^>/i, '')\r\n\r\n  if (!selector || !sel || !el) {\r\n    return false\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (el.matches) {\r\n    return el.matches(sel)\r\n  } else if (el.msMatchesSelector) {\r\n    return el.msMatchesSelector(sel)\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default matches\r\n","/**\r\n * 获取 DOM 元素的父节点\r\n * ========================================================================\r\n * @method getParentOrHost\r\n * @param {*|HTMLElement} el - （必须）要获取父节点的 DOM 元素\r\n * @returns {*|HTMLElement}\r\n */\r\nconst getParentOrHost = (el) => {\r\n  return el.host && el !== document && el.host.nodeType\r\n    ? el.host\r\n    : el.parentNode\r\n}\r\n\r\nexport default getParentOrHost\r\n","export const CAPTURE_EVENTS = [\r\n  'focusout',\r\n  'blur',\r\n  'focusin',\r\n  'focus',\r\n  'load',\r\n  'unload',\r\n  'mouseenter',\r\n  'mouseleave'\r\n]\r\n","import { CAPTURE_EVENTS } from './enum'\r\nimport _delete from './_delete'\r\n\r\n/**\r\n * （私有方法）取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method _off\r\n * @param {HTMLElement} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} fn - （必须）事件处理器回调函数\r\n * @private\r\n */\r\nconst _off = (el, type, fn) => {\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  /* istanbul ignore else */\r\n  if (fn._delegateListener) {\r\n    fn = fn._delegateListener\r\n    delete fn._delegateListener\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  _delete(el, type, fn)\r\n\r\n  el.removeEventListener(type, fn, capture)\r\n}\r\n\r\nexport default _off\r\n","/**\r\n * 删除 DOM 元素缓存的 _listeners 数据\r\n * ========================================================================\r\n * @method _delete\r\n * @param {HTMLElement} el - 要删除 listener 的 DOM 元素\r\n * @param {String} type - 事件类型（名称）\r\n * @param {Function} [fn] - 事件处理器回调函数\r\n */\r\nconst _delete = function (el, type, fn) {\r\n  const listeners = el._listeners\r\n  let index = -1\r\n\r\n  if (listeners.length < 1) {\r\n    return false\r\n  }\r\n\r\n  // 移除缓存的 _listeners 数据\r\n  listeners.forEach((listener, i) => {\r\n    const handler = listener.fn\r\n\r\n    if (type === listener.type) {\r\n      index = i\r\n\r\n      if (handler === fn) {\r\n        index = i\r\n      }\r\n    }\r\n  })\r\n\r\n  /* istanbul ignore else */\r\n  if (index > -1) {\r\n    listeners.splice(index, 1)\r\n  }\r\n}\r\n\r\nexport default _delete\r\n","import isString from '../types/isString'\r\nimport isElement from '../types/isElement'\r\nimport getListeners from './getListeners'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 销毁（type 类型的）代理事件绑定\r\n * ========================================================================\r\n * 1. 设置了事件类型 type，则销毁指定类型的事件绑定，否则清除所有代理事件绑定\r\n * 2. recurse 设置为 true，递归销毁子节点全部事件绑定\r\n * ========================================================================\r\n * @method purgeElement\r\n * @param {HTMLElement|String} el - （必须）DOM 元素或者其选择器\r\n * @param {String|Boolean} type - （必须）事件类型\r\n * @param {Boolean} [recurse] - （可选）是否递归销毁子节点所有事件绑定\r\n */\r\nconst purgeElement = function (el, type, recurse = false) {\r\n  const $element = isString(el) ? document.querySelector(el) : el\r\n  const $children = $element.childNodes\r\n  const listeners = getListeners($element, type)\r\n\r\n  listeners.forEach((listener) => {\r\n    _off($element, listener.type, listener.fn)\r\n  })\r\n\r\n  if (\r\n    (recurse || type === true || arguments.length === 1) &&\r\n    $element &&\r\n    $children\r\n  ) {\r\n    $children.forEach(($child) => {\r\n      if (isElement($child)) {\r\n        purgeElement($child, type, recurse)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default purgeElement\r\n","import isString from '../types/isString'\r\n\r\n/**\r\n * 获取 DOM 元素（type 事件类型）事件绑定信息\r\n * ========================================================================\r\n * 如果设置了事件类型 type， 则返回指定类型的事件绑定信息，否则返回所有事件绑定信息\r\n * ========================================================================\r\n * @methods getListeners\r\n * @param {HTMLElement} el - （必须）要获取事件绑定信息的 DOM 元素\r\n * @param {String} [type] - （可选）事件类型\r\n * @returns {Array} - 已绑定的事件信息\r\n */\r\nconst getListeners = (el, type) => {\r\n  let listeners = el._listeners || []\r\n\r\n  if (isString(type) && type) {\r\n    listeners = listeners.filter((listener) => {\r\n      return listener.type === type\r\n    })\r\n  }\r\n\r\n  return listeners\r\n}\r\n\r\nexport default getListeners\r\n","import purgeElement from './purgeElement'\r\nimport isFunction from '../types/isFunction'\r\nimport _off from './_off'\r\n\r\n/**\r\n * 取消 type 类型的代理事件绑定\r\n * ========================================================================\r\n * 如果没有设置 handler，则销毁 this.$options 绑定的所有符合 type 事件类型的事件绑定\r\n * ========================================================================\r\n * @method off\r\n * @param {HTMLElement|Object} el - （必须）取消事件绑定的 DOM 元素\r\n * @param {String} type - （必须）事件类型\r\n * @param {Function} [fn] - （可选）事件处理器回调函数\r\n */\r\nconst off = (el, type, fn) => {\r\n  // 如果不设置 fn 参数，默认清除 el 元素上绑定的所有事件处理器\r\n  if (!isFunction(fn)) {\r\n    return purgeElement(el, type)\r\n  }\r\n\r\n  _off(el, type, fn)\r\n}\r\n\r\nexport default off\r\n","import closest from '../dom/closest'\r\nimport off from './off'\r\nimport getTarget from './getTarget'\r\n\r\nimport { CAPTURE_EVENTS } from './enum'\r\n\r\n/**\r\n * 绑定代理事件\r\n * ========================================================================\r\n * @method on\r\n * @param {HTMLElement|String|Object} el - （必须）绑定代理事件的 DOM 节点\r\n * @param {String} selector - （必须）事件代理目标 DOM 元素的选择器\r\n * @param {String|Function} type - （必须）事件类型或者事件处理器回调函数\r\n * @param {Function|Object} fn - （可选） 事件处理器回调函数或者传递给事件处理器回调函数的数据对象\r\n * @param {Object|Boolean} [data] - （可选）传递给事件处理器回调函数的数据对象或者事件处理器回调函数的 this 上下文指向，\r\n * @param {Object|Boolean} [context] - （可选）事件处理器回调函数的 this 上下文指向，或者是否仅触发一次\r\n * 当设置为 true 时，则事件处理器回调函数的 this 上下文指向为 data 对象\r\n * @param {Boolean} once - （可选）是否仅触发一次\r\n */\r\nconst on = (el, selector, type, fn, data, context, once = false) => {\r\n  // CAPTURE_EVENTS 中的特殊事件，采用事件捕获模型\r\n  const capture = CAPTURE_EVENTS.indexOf(type) > -1\r\n\r\n  const listener = function (evt) {\r\n    const target = getTarget(evt)\r\n    // 通过 Element.matches 方法获得点击的目标元素\r\n    const delegateTarget = closest(target, selector, el)\r\n    let overrideContext = context || el\r\n\r\n    evt.delegateTarget = delegateTarget\r\n\r\n    // 当设置为 true 时，则事件处理器回调函数的\r\n    // this 上下文指向为 data 对象\r\n    if (context === true) {\r\n      overrideContext = data\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (delegateTarget) {\r\n      // 仅触发一次\r\n      /* istanbul ignore else */\r\n      if (once === true) {\r\n        off(el, type, listener)\r\n      }\r\n\r\n      fn.call(overrideContext, evt, data)\r\n    }\r\n  }\r\n\r\n  if (!el._listeners) {\r\n    el._listeners = []\r\n  }\r\n\r\n  // 缓存 options 元素绑定的事件处理器\r\n  el._listeners.push({\r\n    el,\r\n    selector,\r\n    type,\r\n    fn: listener,\r\n    data,\r\n    context,\r\n    capture\r\n  })\r\n\r\n  // 缓存包装后的事件处理器\r\n  fn._delegateListener = listener\r\n\r\n  el.addEventListener(type, listener, capture)\r\n}\r\n\r\nexport default on\r\n","import resolveTextNode from '../dom/resolveTextNode'\r\n\r\n/**\r\n * 返回触发事件的 target DOM 元素\r\n * ========================================================================\r\n * @method getTarget\r\n * @param {Event} evt - Event 对象\r\n * @return {HTMLElement} - Event 对象的 target DOM 元素\r\n */\r\nconst getTarget = function (evt) {\r\n  const target = evt.target\r\n\r\n  return resolveTextNode(target)\r\n}\r\n\r\nexport default getTarget\r\n","/**\r\n * 在某些情况下，某些浏览器（例如：Safari 浏览器）会返回实际的目标元素内部的文本节点。\r\n * resolveTextNode() 方法则会返回实际的目标节点。\r\n * ========================================================================\r\n * @method resolveTextNode\r\n * @param {HTMLElement|Text} el - 要解析的节点\r\n * @return {*|HTMLElement} - 实际的目标 DOM 节点\r\n */\r\nconst resolveTextNode = function (el) {\r\n  if (el && el.nodeType === 3) {\r\n    return el.parentNode\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nexport default resolveTextNode\r\n","import matches from './matches'\r\nimport getParentOrHost from './getParentOrHost'\r\n\r\n/**\r\n * 获取 options 元素父元素最近的包含 selector 选择器的元素\r\n * ========================================================================\r\n * @method closest\r\n * @param {HTMLElement} el - （必须）DOM 元素\r\n * @param {String} selector - （必须）DOM 元素的选择其\r\n * @param {HTMLElement} [ctx] - （必须）比对的 DOM 元素\r\n * @param {Boolean} [includeCTX] - （必须）是否包含 context DOM 元素\r\n * @returns {null|HTMLElement} - 返回最接近的 DOM 元素\r\n */\r\nconst closest = (el, selector, ctx, includeCTX) => {\r\n  const context = ctx || document\r\n\r\n  if (!el) {\r\n    return null\r\n  }\r\n\r\n  do {\r\n    /* istanbul ignore else */\r\n    if (\r\n      (selector != null &&\r\n        (selector.startsWith('>')\r\n          ? el.parentNode === context && matches(el, selector)\r\n          : matches(el, selector))) ||\r\n      (includeCTX && el === context)\r\n    ) {\r\n      return el\r\n    }\r\n\r\n    /* istanbul ignore else */\r\n    if (el === context) {\r\n      break\r\n    }\r\n\r\n    /* jshint boss:true */\r\n  } while ((el = getParentOrHost(el)))\r\n}\r\n\r\nexport default closest\r\n","import isString from './utils/types/isString'\r\nimport isObject from './utils/types/isObject'\r\nimport isFunction from './utils/types/isFunction'\r\nimport hasOwn from './utils/lang/hasOwn'\r\nimport extend from './utils/lang/extend'\r\nimport later from './utils/lang/later'\r\nimport stripScripts from './utils/lang/stripScripts'\r\nimport encodeHTML from './utils/lang/encodeHTML'\r\nimport cloneDeep from './utils/lang/cloneDeep'\r\nimport guid from './utils/lang/guid'\r\nimport createElement from './utils/dom/createElement'\r\nimport addClass from './utils/dom/addClass'\r\nimport removeClass from './utils/dom/removeClass'\r\nimport icon from './utils/icons/icon'\r\nimport paint from './utils/icons/paint'\r\nimport on from './utils/event/on'\r\nimport off from './utils/event/off'\r\n\r\nconst TYPES = ['info', 'success', 'warning', 'error']\r\nconst instances = []\r\nlet instance\r\n\r\npaint()\r\n\r\nclass Message {\r\n  constructor(options) {\r\n    this.attrs = cloneDeep(Message.DEFAULTS)\r\n\r\n    this.id = ''\r\n    this.closed = false\r\n    this.visible = false\r\n    this.offset = -50\r\n    this.timer = null\r\n    this.$el = null\r\n\r\n    if (options) {\r\n      this.initialize(options)\r\n    }\r\n  }\r\n\r\n  initialize(options) {\r\n    this.attr(options)\r\n    this.id = this.attr('id')\r\n    this.offset = this.attr('offset') || -50\r\n\r\n    this.render().addListeners()\r\n\r\n    if (this.attr('visible')) {\r\n      this.open()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String|Object} [prop]\r\n   * @param {*} [value]\r\n   * @return {*|{}|Message}\r\n   */\r\n  attr(prop, value) {\r\n    const attrs = this.attrs\r\n\r\n    if (isString(prop)) {\r\n      // 只能扩展 attrs 中已有的属性\r\n      if (value && hasOwn(attrs, prop)) {\r\n        // 更新单个配置信息\r\n        attrs[prop] = value\r\n        return this\r\n      }\r\n\r\n      // 只传递 prop 参数，则返回对应的属性值\r\n      return attrs[prop]\r\n    } else if (isObject(prop)) {\r\n      // 批量更新配置信息\r\n      extend(attrs, prop)\r\n\r\n      return this\r\n    } else if (arguments.length === 0) {\r\n      // 不传递参数，直接返回整个\r\n      return attrs\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  isClosed() {\r\n    return this.closed\r\n  }\r\n\r\n  render() {\r\n    const type = this.attr('type')\r\n    const message = this.attr('message')\r\n    const effect = this.attr('effect')\r\n    const round = this.attr('round')\r\n    const closable = this.attr('closable')\r\n    const visible = this.attr('visible')\r\n    const dangerouslyUseHTMLString = this.attr('dangerouslyUseHTMLString')\r\n    const customClass = this.attr('customClass')\r\n    const iconName = effect === 'light' ? `circle-${type}` : type\r\n    const className = [\r\n      'mjs-message',\r\n      `mjs-message_${type}`,\r\n      `mjs-message_${effect}`\r\n    ]\r\n    const children = []\r\n    let iconSize = round ? 20 : 16\r\n    let $type\r\n    let $message\r\n    let $text\r\n    let $close\r\n    let $el\r\n\r\n    if (round) {\r\n      className.push('mjs-message_round')\r\n\r\n      if (effect === 'default') {\r\n        iconSize = 12\r\n      }\r\n    }\r\n\r\n    if (!closable) {\r\n      className.push('mjs-message_full-width')\r\n    }\r\n\r\n    if (visible) {\r\n      className.push('mjs-message_visible')\r\n    }\r\n\r\n    if (customClass) {\r\n      className.push(customClass)\r\n    }\r\n\r\n    if (effect !== 'plain') {\r\n      $type = icon(iconName, {\r\n        iconSet: 'mjs',\r\n        size: iconSize\r\n      })\r\n      addClass($type, 'mjs-message__icon')\r\n      children.push($type)\r\n    }\r\n\r\n    if (!dangerouslyUseHTMLString) {\r\n      $text = document.createTextNode(encodeHTML(stripScripts(message)))\r\n    } else {\r\n      $text = document.createDocumentFragment()\r\n      $text.innerHTML = message\r\n    }\r\n    $message = createElement(\r\n      'p',\r\n      {\r\n        className: 'mjs-message__content'\r\n      },\r\n      [$text]\r\n    )\r\n    children.push($message)\r\n\r\n    if (closable) {\r\n      $close = icon('close', {\r\n        iconSet: 'mjs',\r\n        size: 18\r\n      })\r\n      addClass($close, 'mjs-message__close')\r\n      children.push($close)\r\n    }\r\n\r\n    $el = createElement(\r\n      'div',\r\n      {\r\n        className: className.join(' ')\r\n      },\r\n      children\r\n    )\r\n    $el.style.cssText = `top:-50px;`\r\n    this.$el = $el\r\n\r\n    document.body.appendChild(this.$el)\r\n\r\n    return this\r\n  }\r\n\r\n  clearTimer() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n      this.timer = null\r\n    }\r\n  }\r\n\r\n  startTimer(duration) {\r\n    this.timer = later(() => {\r\n      this.close()\r\n    }, duration * 1000)\r\n  }\r\n\r\n  open() {\r\n    const $el = this.$el\r\n    const offset = this.attr('offset')\r\n    const duration = this.attr('duration')\r\n    const top = offset && offset >= this.offset ? offset : this.offset\r\n    const cssRules = `top:${top}px;`\r\n\r\n    this.clearTimer()\r\n\r\n    later(() => {\r\n      this.visible = true\r\n\r\n      addClass($el, 'mjs-message_visible')\r\n      $el.style.cssText = cssRules\r\n\r\n      if (duration > 0) {\r\n        this.startTimer(duration)\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  close() {\r\n    const $el = this.$el\r\n    const beforeClose = this.attr('beforeClose')\r\n    const cssRules = `top:-50px;`\r\n\r\n    if (isFunction(beforeClose)) {\r\n      beforeClose(this)\r\n    }\r\n\r\n    $el.style.cssText = cssRules\r\n    removeClass($el, 'mjs-message_visible')\r\n\r\n    this.visible = false\r\n    this.closed = true\r\n\r\n    later(() => {\r\n      this.destroy()\r\n    }, 500)\r\n\r\n    return this\r\n  }\r\n\r\n  destroy() {\r\n    this.removeListeners()\r\n    document.body.removeChild(this.$el)\r\n\r\n    this.attr(Message.DEFAULTS)\r\n    this.id = ''\r\n    this.closed = true\r\n    this.visible = false\r\n    this.offset = -50\r\n    this.timer = null\r\n    this.$el = null\r\n\r\n    return this\r\n  }\r\n\r\n  reload(options) {\r\n    this.destroy().initialize(this.attr(options))\r\n    return this\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.clearTimer()\r\n    return this\r\n  }\r\n\r\n  onMouseLeave() {\r\n    const duration = this.attr('duration')\r\n    const delay = this.attr('delay')\r\n\r\n    if (duration <= 0) {\r\n      return false\r\n    }\r\n\r\n    this.startTimer(delay)\r\n\r\n    return this\r\n  }\r\n\r\n  onClose() {\r\n    this.clearTimer()\r\n    this.close()\r\n    return this\r\n  }\r\n\r\n  addListeners() {\r\n    const $el = this.$el\r\n\r\n    on(\r\n      $el,\r\n      '.mjs-message__content',\r\n      'mouseenter',\r\n      this.onMouseEnter,\r\n      this,\r\n      true\r\n    )\r\n    on(\r\n      $el,\r\n      '.mjs-message__content',\r\n      'mouseleave',\r\n      this.onMouseLeave,\r\n      this,\r\n      true\r\n    )\r\n    on($el, '.mjs-message__close', 'click', this.onClose, this, true)\r\n\r\n    return this\r\n  }\r\n\r\n  removeListeners() {\r\n    const $el = this.$el\r\n\r\n    off($el, 'mouseenter', this.onMouseEnter)\r\n    off($el, 'mouseleave', this.onMouseLeave)\r\n    off($el, 'click', this.onClose)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nMessage.DEFAULTS = {\r\n  id: '',\r\n  type: 'info',\r\n  effect: 'default',\r\n  round: false,\r\n  offset: 30,\r\n  duration: 6,\r\n  delay: 2,\r\n  message: '',\r\n  customClass: '',\r\n  closable: true,\r\n  visible: true,\r\n  dangerouslyUseHTMLString: false,\r\n  beforeClose: null\r\n}\r\n\r\nTYPES.forEach((type) => {\r\n  Message[type] = (options) => {\r\n    const id = guid(`mjs-message-`)\r\n    const beforeClose = options.beforeClose\r\n    let offset = options.offset || 30\r\n\r\n    options = options || {}\r\n\r\n    if (isString(options)) {\r\n      options = {\r\n        message: options\r\n      }\r\n    }\r\n    options.id = id\r\n    options.type = type\r\n    options.offset = offset\r\n    options.visible = false\r\n    options.beforeClose = () => {\r\n      Message.close(id, beforeClose, instances)\r\n    }\r\n\r\n    instance = new Message(options)\r\n\r\n    instances.forEach((item) => {\r\n      offset += item.$el.offsetHeight + 16\r\n    })\r\n    instance.offset = offset\r\n    instance.open()\r\n    instances.push(instance)\r\n\r\n    return instance\r\n  }\r\n})\r\n\r\n// 关闭指定 id 消息的静态方法\r\nMessage.close = (id, beforeClose) => {\r\n  const len = instances.length\r\n  let index = -1\r\n  let i\r\n  let offsetHeight\r\n\r\n  instances.forEach((instance, i) => {\r\n    // 在 instances 中通过 id 找到要关闭的消息\r\n    if (id === instance.id) {\r\n      offsetHeight = instance.$el.offsetHeight\r\n      index = i\r\n\r\n      // 关闭消息\r\n      if (isFunction(beforeClose)) {\r\n        beforeClose(instance)\r\n      }\r\n\r\n      instances.splice(i, 1)\r\n    }\r\n  })\r\n\r\n  if (len <= 1 || index === -1 || index > instances.length - 1) {\r\n    return false\r\n  }\r\n\r\n  i = index\r\n\r\n  // 界面中的消息逐个向上收起\r\n  for (; i < len - 1; i += 1) {\r\n    const dom = instances[i].$el\r\n\r\n    dom.style['top'] = parseInt(dom.style['top'], 10) - offsetHeight - 16 + 'px'\r\n  }\r\n}\r\n\r\n// 关闭所有消息的静态方法\r\nMessage.clear = () => {\r\n  let i = instances.length - 1\r\n  for (; i >= 0; i -= 1) {\r\n    instances[i].close()\r\n  }\r\n}\r\n\r\nexport default Message\r\n","import add from './add'\r\nimport getSymbols from './getSymbols'\r\n\r\n/**\r\n * 绘制 SVG 图标集\r\n * ========================================================================\r\n * @method paint\r\n * @param {String|Array} symbol\r\n */\r\nconst paint = (symbol = '') => {\r\n  const $body = document.body\r\n  let $icons = document.querySelector('#mjs-icons')\r\n  let symbols = []\r\n\r\n  add(symbol)\r\n  symbols = getSymbols()\r\n\r\n  if ($icons) {\r\n    $icons.innerHTML = symbols.join('')\r\n  } else {\r\n    $icons = document.createElement('div')\r\n    $icons.innerHTML =\r\n      `<svg id=\"mjs-icons\" aria-hidden=\"true\" style=\"position:absolute;display:none;width:0;height:0;overflow:hidden;\">` +\r\n      `${symbols.join('')}` +\r\n      `</svg>`\r\n    $body.insertBefore($icons.firstChild, $body.firstChild)\r\n  }\r\n}\r\n\r\nexport default paint\r\n","import isArray from '../types/isArray'\r\nimport isString from '../types/isString'\r\nimport SYMBOLS from './symbols'\r\n\r\n/**\r\n * @method add\r\n * @param {Array|String} symbols\r\n * @return {Boolean}\r\n */\r\nconst add = (symbols) => {\r\n  if (!symbols) {\r\n    return false\r\n  }\r\n\r\n  if (isArray(symbols) && symbols.length > 0) {\r\n    symbols.forEach((symbol) => {\r\n      /* istanbul ignore else */\r\n      if (SYMBOLS.indexOf(symbol) === -1 && isString(symbol)) {\r\n        SYMBOLS.push(symbol)\r\n      }\r\n    })\r\n  } else {\r\n    /* istanbul ignore else */\r\n    if (isString(symbols)) {\r\n      SYMBOLS.push(symbols)\r\n    }\r\n  }\r\n}\r\n\r\nexport default add\r\n","import hasOwn from './hasOwn'\r\n\r\n/**\r\n * 扩展对象\r\n * ========================================================================\r\n * @method extend\r\n * @param {Object} origin\r\n * @param {Object} source\r\n */\r\nconst extend = (origin, source) => {\r\n  const keys = Object.keys(source)\r\n\r\n  keys.forEach((prop) => {\r\n    if (hasOwn(source, prop)) {\r\n      origin[prop] = source[prop]\r\n    }\r\n  })\r\n}\r\n\r\nexport default extend\r\n","/**\r\n * 转义字符串中的 HTML 标签\r\n *\r\n * @param {String} str - 需要转义的字符串\r\n * @returns {String}\r\n */\r\nconst encodeHTML = (str) => {\r\n  const CHARTS = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&#39;',\r\n    '\"': '&quot;'\r\n  }\r\n\r\n  return str.replace(/[&<>'\"]/g, (tag) => {\r\n    return CHARTS[tag] || tag\r\n  })\r\n}\r\n\r\nexport default encodeHTML\r\n","/**\r\n * 移除字符串中的 JavaScript 代码\r\n * ====================================================\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nconst stripScripts = (str) => {\r\n  return str.replace(/<script[^>]*>.*?<\\/script>/gi, '')\r\n}\r\n\r\nexport default stripScripts\r\n"],"names":["isString","str","toString","val","Object","prototype","apply","isFunction","isObject","o","hasOwn","obj","prop","hasOwnProperty","call","later","fn","delay","setTimeout","isArray","Array","cloneDeep","clone","assign","keys","forEach","key","length","from","guid","id","prefix","isElement","nodeName","tagName","nodeType","isDOM","el","isHTMLCollection","fragment","isTextNode","setAttributes","attrs","attr","value","toLowerCase","style","cssText","setAttribute","className","createElement","children","$fragment","document","createDocumentFragment","$el","isValidChild","child","append","$child","createTextNode","appendChild","every","hasClass","pattern","RegExp","allClass","classList","contains","exec","addClass","add","removeClass","remove","replace","isSVG","test","icon","name","options","size","color","iconSet","width","height","defaultRules","cssRules","$icon","$svg","binds","svg","innerHTML","querySelector","xmlns","class","SYMBOLS","getSymbols","patternName","patternSet","find","symbol","fullName","iconName","getSymbol","matches","selector","sel","msMatchesSelector","getParentOrHost","host","parentNode","CAPTURE_EVENTS","_off","type","capture","indexOf","_delegateListener","listeners","_listeners","index","listener","i","handler","splice","_delete","removeEventListener","purgeElement","recurse","$element","$children","childNodes","filter","getListeners","arguments","off","on","data","context","once","evt","target","getTarget","delegateTarget","ctx","includeCTX","startsWith","closest","overrideContext","push","addEventListener","instances","instance","$body","body","$icons","symbols","join","insertBefore","firstChild","paint","Message","constructor","this","DEFAULTS","closed","visible","offset","timer","initialize","render","addListeners","open","origin","source","isClosed","message","effect","round","closable","dangerouslyUseHTMLString","customClass","$type","$message","$text","$close","iconSize","CHARTS","tag","encodeHTML","clearTimer","clearTimeout","startTimer","duration","close","beforeClose","destroy","removeListeners","removeChild","reload","onMouseEnter","onMouseLeave","onClose","item","offsetHeight","len","dom","parseInt","clear"],"mappings":"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"}